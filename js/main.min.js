"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

window.onload = function () {
  if (window.NodeList && !NodeList.prototype.forEach) {
    NodeList.prototype.forEach = Array.prototype.forEach;
  }

  if (window.HTMLCollection && !HTMLCollection.prototype.forEach) {
    HTMLCollection.prototype.forEach = Array.prototype.forEach;
  }

  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty('before')) {
        return;
      }

      Object.defineProperty(item, 'before', {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function before() {
          var argArr = Array.prototype.slice.call(arguments),
              docFrag = document.createDocumentFragment();
          argArr.forEach(function (argItem) {
            var isNode = argItem instanceof Node;
            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
          });
          this.parentNode.insertBefore(docFrag, this);
        }
      });
    });
  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);

  svg4everybody();

  var Slider = /*#__PURE__*/function () {
    function Slider(rangeElements, valueElements) {
      var _this = this;

      _classCallCheck(this, Slider);

      this.rangeElements = rangeElements;
      this.valueElements = valueElements; // Attach a listener to "change" event

      this.rangeElements.forEach(function (e) {
        e.addEventListener('input', _this.updateSlider.bind(_this));
      });
    } // Initialize the slider


    _createClass(Slider, [{
      key: "init",
      value: function init() {
        this.updateSlider();
      }
    }, {
      key: "generateBackground",
      value: function generateBackground(value, min, max) {
        var percentage = (value - min) / (max - min) * 100;
        return "linear-gradient(to right, #1C47B7, #1C47B7 ".concat(percentage, "%, #fff ").concat(percentage, "%, #ffffff 100%)");
      }
    }, {
      key: "updateSlider",
      value: function updateSlider(newValue) {
        var _this2 = this;

        this.rangeElements.forEach(function (e) {
          e.style.background = _this2.generateBackground(e.value, e.min, e.max);

          e.oninput = function () {
            var slide1 = parseFloat(e.value);
            e.parentElement.querySelector('.range-slider__field').value = slide1;
          };
        });
        this.valueElements.forEach(function (e) {
          e.oninput = function () {
            var percentage = (e.value - e.min) / (e.max - e.min) * 100;
            e.parentElement.querySelector('.range-slider__line').value = e.value;
            e.parentElement.querySelector('.range-slider__line').style.background = "linear-gradient(to right, #1C47B7, #1C47B7 ".concat(percentage, "%, #fff ").concat(percentage, "%, #ffffff 100%)");
          };
        });
      }
    }]);

    return Slider;
  }();

  var rangeElements = document.querySelectorAll('.range-slider__line');
  var valueElements = document.querySelectorAll('.range-slider__field');

  if (rangeElements) {
    var slider = new Slider(rangeElements, valueElements);
    slider.init();
  }

  var sliderBtn = function sliderBtn() {
    var titles = document.querySelectorAll('.slider-btn__title');
    var checkbox = document.querySelectorAll('.slider-btn__field');
    checkbox.forEach(function (e) {
      e.addEventListener('change', function () {
        if (this.checked) {
          this.closest('.slider-btn').querySelectorAll('.slider-btn__title')[1].classList.add('slider-btn__title--active');
          this.closest('.slider-btn').querySelectorAll('.slider-btn__title')[0].classList.remove('slider-btn__title--active');
        } else {
          this.closest('.slider-btn').querySelectorAll('.slider-btn__title')[1].classList.remove('slider-btn__title--active');
          this.closest('.slider-btn').querySelectorAll('.slider-btn__title')[0].classList.add('slider-btn__title--active');
        }
      });
    });
  };

  sliderBtn();

  var tab = function tab() {
    var tabNav = document.querySelectorAll('.tabs__nav-item'),
        // Выбираем элементы навигации табов
    tabContent = document.querySelectorAll('.tabs__content-item'),
        // Выбираем самы табы
    tabName; // Переменная для имени таба
    // Проходим циклом по каждому элементу навигации и навешиваем обработчик клика, который вызывает функцию selectTabNav

    tabNav.forEach(function (item) {
      item.addEventListener('click', selectTabNav);
    });

    function selectTabNav() {
      tabNav.forEach(function (item) {
        // Удаляем активный класс у всех элементов навигации табов
        item.classList.remove('tabs__nav-item--active');
      });
      this.classList.add('tabs__nav-item--active'); // Добавляем активный укласс у элемента по которому кликнули

      tabName = this.getAttribute('data-tab-name'); // Получаем имя таба, который нам нужен

      selectTabContent(tabName); // Запускаем функцию, чтобы показать выбранный таб
    }

    function selectTabContent(tab) {
      // Проходим по всем табам и проверяем есть ли у элемента класс, равный имени таба(переменной tabName). Если есть, то добавляем класс активного таба, если нет, то удаляем этот класс
      tabContent.forEach(function (item) {
        var classList = item.classList;
        classList.contains(tab) ? classList.add('tabs__content-item--active') : classList.remove('tabs__content-item--active');
      });
    }
  };

  tab();

  var select = function select() {
    var selectCurrent = document.querySelectorAll('.select__header'),
        selectItem = document.querySelectorAll('.select__item');
    selectCurrent.forEach(function (item) {
      item.addEventListener('click', function (e) {
        e.currentTarget.parentElement.classList.toggle('select--opened');
      });
    });
    selectItem.forEach(function (item) {
      item.addEventListener('click', function (e) {
        e.currentTarget.closest('.select').querySelector('.select__current').innerHTML = e.currentTarget.innerHTML;
        e.currentTarget.closest('.select').classList.remove('select--opened');
      });
    });
  };

  select();

  var cardMobile = function cardMobile() {
    var items = document.querySelectorAll('.card-mobile:nth-child(n+4)');

    if (window.innerWidth <= 575) {
      items.forEach(function (e) {
        e.classList.add('card-mobile--hide');
      });
    }
  };

  cardMobile();

  var accordion = function accordion() {
    var accBlock = document.querySelectorAll('.accordion');
    accBlock.forEach(function (e) {
      var panel = e.querySelector('.accordion__header').nextElementSibling;

      var checkClass = function checkClass() {
        if (e.classList.contains('accordion--active')) {
          panel.style.maxHeight = "".concat(panel.scrollHeight, "px");
        } else {
          panel.style.maxHeight = '0';
        }
      };

      checkClass();
      e.addEventListener('click', function () {
        e.classList.toggle('accordion--active');
        checkClass();
      });
    });
  };

  accordion();

  var scrolltop = function scrolltop() {
    var item = document.querySelector('.scrolltop');
    window.addEventListener('scroll', function () {
      if (window.pageYOffset > 400) {
        item.classList.add('scrolltop--active');
      } else {
        item.classList.remove('scrolltop--active');
      }
    });
  };

  scrolltop();

  var cloneHeader = function cloneHeader() {
    var header = document.querySelector('.header'),
        cloneHeader = header.cloneNode(true);
    cloneHeader.classList.add('header--sticky');
    header.before(cloneHeader);
    window.addEventListener('scroll', function () {
      if (window.pageYOffset > 150) {
        cloneHeader.classList.add('header--is-show');
      } else {
        cloneHeader.classList.remove('header--is-show');
      }
    });
  };

  cloneHeader();

  var popupLink = function popupLink() {
    var popupLinks = document.querySelectorAll('.js-popup-link');
    var body = document.querySelector('body');
    var lockPadding = document.querySelectorAll('.hidden');
    var unlock = true;
    var timeout = 300;

    if (popupLinks.length > 0) {
      var _loop = function _loop(index) {
        var popupLink = popupLinks[index];
        popupLink.addEventListener('click', function (e) {
          var popupName = popupLink.getAttribute('href').replace('#', '');
          var curentPopup = document.getElementById(popupName);
          popupOpen(curentPopup);
          console.log(popupName);
          e.preventDefault();
        });
      };

      for (var index = 0; index < popupLinks.length; index++) {
        _loop(index);
      }
    }

    var popupCloseIcon = document.querySelectorAll('.close-popup');

    if (popupCloseIcon.length > 0) {
      var _loop2 = function _loop2(_index) {
        var el = popupCloseIcon[_index];
        el.addEventListener('click', function (e) {
          popupClose(el.closest('.popup'));
          e.preventDefault();
        });
      };

      for (var _index = 0; _index < popupCloseIcon.length; _index++) {
        _loop2(_index);
      }
    }

    function popupOpen(curentPopup) {
      if (curentPopup && unlock) {
        var popupActive = document.querySelector('.popup.popup--opened');

        if (popupActive) {
          popupClose(popupActive, false);
        } else {
          bodyLock();
        }

        curentPopup.classList.add('popup--opened');
        curentPopup.addEventListener('click', function (e) {
          if (!e.target.closest('.popup__content')) {
            popupClose(e.target.closest('.popup'));
          }
        });
      }
    }

    function popupClose(popupActive) {
      var doUnlock = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      if (unlock) {
        popupActive.classList.remove('popup--opened');

        if (doUnlock) {
          bodyUnLock();
        }
      }
    }

    function bodyLock() {
      var lockPaddingValue = "".concat(window.innerWidth - document.querySelector('.wrapper').offsetWidth, "px");

      if (lockPadding.length > 0) {
        for (var _index2 = 0; _index2 < lockPadding.length; _index2++) {
          var el = lockPadding[_index2];
          el.style.paddingRight = lockPaddingValue;
        }
      }

      body.style.paddingRight = lockPaddingValue;
      body.classList.add('hidden');
      unlock = false;
      setTimeout(function () {
        unlock = true;
      }, timeout);
    }

    function bodyUnLock() {
      setTimeout(function () {
        if (lockPadding.length > 0) {
          for (var _index3 = 0; _index3 < lockPadding.length; _index3++) {
            var el = lockPadding[_index3];
            el.style.paddingRight = '0px';
          }
        }

        body.style.paddingRight = '0px';
        body.classList.remove('hidden');
      }, timeout);
      unlock = false;
      setTimeout(function () {
        unlock = true;
      }, timeout);
    }

    document.addEventListener('keydown', function (e) {
      if (e.which === 27) {
        var popupActive = document.querySelector('.popup.popup--opened');
        popupClose(popupActive);
      }
    });

    (function () {
      // проверяем поддержку
      if (!Element.prototype.closest) {
        // реализуем
        Element.prototype.closest = function (css) {
          var node = this;

          while (node) {
            if (node.matches(css)) return node;
            node = node.parentElement;
          }

          return null;
        };
      }
    })();

    (function () {
      // проверяем поддержку
      if (!Element.prototype.matches) {
        // определяем свойство
        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector;
      }
    })();
  };

  popupLink();
  $("input[type='phone']").inputmask({
    mask: '+ 7 (999) 999-99-99'
  });
  var galleryThumbs = new Swiper('.company__thumbs', {
    spaceBetween: 0,
    slidesPerView: 'auto',
    watchOverflow: false
  });
  var galleryTop = new Swiper('.company__gallery', {
    spaceBetween: 30,
    loop: true,
    speed: 400,
    navigation: {
      nextEl: '.company__gallery-next',
      prevEl: '.company__gallery-prev'
    },
    thumbs: {
      swiper: galleryThumbs
    }
  });

  var heroMore = function heroMore() {
    var moreBtn = document.querySelector('.hero__desc-more');
    var text = document.querySelector('.hero__desc-text');

    if (text) {
      if (window.innerWidth <= 575) {
        var btn = document.createElement('button');
        var innerText = text.innerText.split(' ').slice(0, -1).join(' ');
        btn.classList.add('hero__desc-more');
        btn.innerHTML = 'Подробнее';
        var textSlice = text.innerText.split(' ').slice(0, 13).join(' ');
        text.innerHTML = textSlice;
        text.appendChild(btn);
        btn.addEventListener('click', function () {
          text.removeChild(btn);
          text.innerHTML = innerText;
        });
      }
    }
  };

  heroMore();

  var sandwich = function sandwich() {
    $('.sandwich__open-btn').click(function () {
      $('.sandwich__menu').addClass('sandwich__menu--opened');
      $('.sandwich__content').addClass('sandwich__content--active');
      $('body').addClass('hidden');
    });
    $('.sandwich__close-btn').click(function () {
      $('.sandwich__menu').removeClass('sandwich__menu--opened');
      $('.sandwich__content').removeClass('sandwich__content--active');
      $('.outer-menu').removeClass('outer-menu--opened');
      $('body').removeClass('hidden');
      return false;
    });
    $('.sandwich .sandwich__content').click(function () {
      $('.sandwich__menu').removeClass('sandwich__menu--opened');
      $('.outer-menu').removeClass('outer-menu--opened');
      $('.sandwich .sandwich__content').removeClass('sandwich__content--active');
      $('body').removeClass('hidden');
    });
    $('.main-nav__item').click(function () {
      $(this).children('.outer-menu').addClass('outer-menu--opened');
    });
    $('.outer-menu__back').click(function () {
      $('.outer-menu').removeClass('outer-menu--opened');
      return false;
    });
  };

  sandwich();

  var license = function license() {
    var items = document.querySelectorAll('.license__item:nth-child(n+3)');

    if (window.innerWidth <= 575) {
      items.forEach(function (e) {
        e.classList.add('license__item--hide');
      });
    }
  };

  license();
  ymaps.ready(init);

  function init() {
    var myMap = new ymaps.Map('map', {
      center: [55.7960, 37.6056],
      zoom: 16,
      controls: ['zoomControl']
    });

    if (window.innerWidth <= 860) {
      myMap.setCenter([55.7961, 37.6100]);
    }

    var myGeoObjects = [];
    myGeoObjects[0] = new ymaps.Placemark([55.7967, 37.6092], {
      clusterCaption: 'Заголовок' // balloonContentBody: 'Текст в балуне',

    }, {
      // Необходимо указать данный тип макета.
      iconLayout: 'default#image',
      iconImageHref: '../images/content/marker.png',
      // Размеры метки.
      iconImageSize: [116, 130],
      // Смещение левого верхнего угла иконки относительно
      // её «ножки» (точки привязки).
      iconImageOffset: [-3, -42]
    });
    var clusterIcons = [{
      href: '../images/content/marker.png',
      size: [116, 130],
      offset: [0, 0]
    }];
    var clusterer = new ymaps.Clusterer({
      clusterDisableClickZoom: false,
      clusterOpenBalloonOnClick: false,
      // Устанавливаем стандартный макет балуна кластера "Карусель".
      clusterBalloonContentLayout: 'cluster#balloonCarousel',
      // Устанавливаем собственный макет.
      // clusterBalloonItemContentLayout: customItemContentLayout,
      // Устанавливаем режим открытия балуна.
      // В данном примере балун никогда не будет открываться в режиме панели.
      clusterBalloonPanelMaxMapArea: 0,
      // Устанавливаем размеры макета контента балуна (в пикселях).
      clusterBalloonContentLayoutWidth: 300,
      clusterBalloonContentLayoutHeight: 200,
      // Устанавливаем максимальное количество элементов в нижней панели на одной странице
      clusterBalloonPagerSize: 5 // Настройка внешего вида нижней панели.
      // Режим marker рекомендуется использовать с небольшим количеством элементов.
      // clusterBalloonPagerType: 'marker',
      // Можно отключить зацикливание списка при навигации при помощи боковых стрелок.
      // clusterBalloonCycling: false,
      // Можно отключить отображение меню навигации.
      // clusterBalloonPagerVisible: false

    });
    clusterer.add(myGeoObjects);
    myMap.geoObjects.add(clusterer);
  }
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
